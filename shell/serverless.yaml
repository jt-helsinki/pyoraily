service: shell

package:
  individually: true
  excludeDevDependencies: true

plugins:
  - serverless-s3-sync
  - serverless-single-page-app-plugin

useDotself:custom.environment. true
custom:
  stage: ${opt:stage, self:provider.stage}
  environment: ${file(envs/env.${self:custom.stage}.yaml)}
  s3Bucket: suomen-pyoraily-hpy
  s3Sync:
    # A simple configuration for copying static assets
    - bucketName: ${self:custom.s3Bucket}
      localDir: build
      deleteRemoved: true

provider:
  name: aws
  profile: ${self:custom.environment.SLS_PROFILE}
  region: ${self:custom.environment.AWS_REGION}
resources:
  Resources:
    AssetsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3Bucket}
        WebsiteConfiguration:
          IndexDocument: index.html
        OwnershipControls:
          Rules:
            - ObjectOwnership: ObjectWriter
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
    PublicBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref AssetsBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "s3:GetObject"
              Resource:
                - !Sub "${AssetsBucket.Arn}/*"
              Principal: "*"
    ## Specifying the CloudFront Distribution to server your Web Application
    WebAppCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          PriceClass: PriceClass_100
          HttpVersion:  http2and3
          CNAMEs:
            - hpy.pyoraily.net
          Origins:
            - DomainName: ${self:custom.s3Bucket}.s3.amazonaws.com
              ## An identifier for the origin which must be unique within the distribution
              Id: sp-hpy-shell
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
              ## In case you want to restrict the bucket access use S3OriginConfig and remove CustomOriginConfig
              # S3OriginConfig:
              #   OriginAccessIdentity: origin-access-identity/cloudfront/E127EXAMPLE51Z
          Enabled: 'true'
          ## Uncomment the following section in case you are using a custom domain
          Aliases:
          - hpy.pyoraily.net
          DefaultRootObject: index.html
          ## Since the Single Page App is taking care of the routing we need to make sure ever path is served with index.html
          ## The only exception are files that actually exist e.h. app.js, reset.css
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html
          Restrictions:
            GeoRestriction:
              Locations:
                - FI
                - SE
                - AX
                - NO
                - DK
                - AD
                - AT
                - AU
                - BE
                - CA
                - CH
                - DE
                - EE
                - ES
                - FR
                - GB
                - IT
                - LU
                - LT
                - LV
                - NL
                - NZ
                - PT
                - US
              RestrictionType: whitelist
          DefaultCacheBehavior:
            Compress: true
            AllowedMethods:
#              - DELETE
              - GET
              - HEAD
#              - OPTIONS
#              - PATCH
#              - POST
#              - PUT
            ## The origin id defined above
            TargetOriginId: sp-hpy-shell
            ## Defining if and how the QueryString and Cookies are forwarded to the origin which in this case is S3
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ## The protocol that users can use to access the files in the origin. To allow HTTP use `allow-all`
            ViewerProtocolPolicy: redirect-to-https
          ## The certificate to use when viewers use HTTPS to request objects.
          ViewerCertificate:
            AcmCertificateArn: arn:aws:acm:us-east-1:604407990584:certificate/ad9adaf7-7221-4499-a27f-35f4cc096fb2
            SslSupportMethod: sni-only
#            MinimumProtocolVersion: SSLv3
          ## Uncomment the following section in case you want to enable logging for CloudFront requests
          # Logging:
          #   IncludeCookies: 'false'
          #   Bucket: mylogs.s3.amazonaws.com
          #   Prefix: myprefix

  ## In order to print out the hosted domain via `serverless info` we need to define the DomainName output for CloudFormation
  Outputs:
    WebAppCloudFrontDistributionOutput:
      Value:
        'Fn::GetAtt': [ WebAppCloudFrontDistribution, DomainName ]
